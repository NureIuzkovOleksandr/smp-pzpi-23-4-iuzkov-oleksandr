Харківський національний університет радіоелектроніки
Факультет комп’ютерних наук
Катедра програмної інженерії
 
 
Звіт
з лабораторної роботи № 2 
з дисципліни «Скриптові мови програмування»
на тему: «Продовольчий магазин "Весна"»

 
 
 
Виконав:                                                                           Перевірив:
ст. гр. ПЗПІ-23-4                                                              ст. викладач кафедри ПІ
Юзков Олександр                                            	         Сокорчук Ігор Петрович
 
 
 
Харків 2025
1 ІСТОРІЯ ЗМІН

№	Дата	Версія звіту	Опис змін та виправлень
1	20.05.2025	0.1	Зроблено звіт
2 ЗАВДАННЯ
Мета цього завдання — створити консольний PHP-застосунок «Продовольчий магазин "Весна"», який забезпечує взаємодію з користувачем через термінал. Програма повинна надавати функціонал для моделювання процесу купівлі продуктів: переглядати каталог доступних товарів, додавати їх до кошика з вказанням кількості, формувати підсумковий рахунок із детальним чеком. Також користувач має можливість налаштувати свій профіль, вводячи ім’я та вік. Інтерфейс повинен бути простим і зручним, а всі введені дані — перевірятися на коректність: наявність вибраного пункту меню, існування товару, правильність кількості, а також формат імені й віку. Програма має бути логічно структурованою, обробляти помилки та забезпечувати зрозумілий текстовий інтерфейс, що відповідає поставленим вимогам. 
    3 ОПИС ВИКОНАНОЇ РОБОТИ
У додатку В наведено повний код консольного застосунку «Продовольчий магазин "Весна"». Посилання на відеозапис демонстрації роботи програми міститься у додатку А. 
На початку виконання програми створюються масиви з даними: перелік товарів $items, де кожен товар має унікальний номер, назву та ціну; кошик покупця $basket, який спочатку порожній; а також профіль користувача $user, що зберігає ім’я та вік, які спочатку не заповнені. .
    1 <?php
    2 
    3 $items = [
    4     1 => ['title' => 'Молоко пастеризоване', 'cost' => 12],
    5     2 => ['title' => 'Хліб чорний', 'cost' => 9],
    6     3 => ['title' => 'Сир білий', 'cost' => 21],
    7     4 => ['title' => 'Сметана 20%', 'cost' => 25],
    8     5 => ['title' => 'Кефір 1%', 'cost' => 19],
    9     6 => ['title' => 'Вода газована', 'cost' => 18],
    10     7 => ['title' => 'Печиво "Весна"', 'cost' => 14],
    11 ];
    12 
    13 $basket = [];
    14 
    15 $user = [
    16     'username' => '',
    17     'years' => 0
    18 ];

Програма працює у нескінченному циклі, постійно показуючи головне меню з чотирма варіантами дій: вибір товарів, перегляд рахунку, налаштування профілю та вихід. Залежно від вибору користувача виконується відповідна функція. У разі введення некоректної команди користувач отримує повідомлення про помилку.
    19 echo "\n################################\n";
    20 echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
    21 echo "################################\n";
    22 
    23 while (true) {
    24     echo "1 Вибрати товари\n";
    25     echo "2 Отримати підсумковий рахунок\n";
    26     echo "3 Налаштувати свій профіль\n";
    27     echo "0 Вийти з програми\n";
    28     echo "Введіть команду: ";
    29     $cmd = trim(fgets(STDIN));
    30 
    31     switch ($cmd) {
    32         case '1':
    33             selectGoods($items, $basket);
    34             break;
    35         case '2':
    36             displayInvoice($items, $basket);
    37             break;
    38         case '3':
    39             configureUser($user);
    40             break;
    41         case '0':
    42             exit("Дякуємо за покупки! До побачення.\n");
    43         default:
    44             echo "ПОМИЛКА! Введіть правильну команду\n";
    45     }
    46 }

Функція renderTable відповідає за акуратне виведення табличних даних у консоль. Вона приймає заголовки стовпців ($labels) і рядки таблиці ($data). Спочатку визначається ширина кожного стовпця, щоб забезпечити вирівнювання вмісту. Потім за допомогою реалізованої нижче допоміжної функції utf8_pad кожне значення доповнюється пробілами до потрібної довжини. Це важливо для коректної роботи з кирилицею, оскільки стандартні PHP-функції можуть некоректно рахувати кількість символів у рядках.

    47 function renderTable($labels, $data) {
    48     $columns = array_map(fn($label) => mb_strlen($label, 'UTF-8'), $labels);
    49 
    50     foreach ($data as $line) {
    51         foreach ($line as $j => $value) {
    52             $columns[$j] = max($columns[$j], mb_strlen((string)$value, 'UTF-8'));
    53         }
    54     }
    55 
    56     foreach ($labels as $j => $label) {
    57         echo utf8_pad($label, $columns[$j]) . '  ';
    58     }
    59     echo "\n";
    60 
    61     foreach ($data as $line) {
    62         foreach ($line as $j => $value) {
    63             echo utf8_pad((string)$value, $columns[$j]) . '  ';
    64         }
    65         echo "\n";
    66     }
    67 }

Реалізована допоміжна функція utf8_pad є розширеною версією стандартної str_pad і забезпечує коректну роботу з багатобайтовими символами, такими як українські літери. Вона використовується у функції renderTable для вирівнювання стовпців, визначаючи, скільки пробілів потрібно додати до кінця рядка, щоб досягти потрібної довжини, і повертає рядок з відповідним доповненням.
    68 function utf8_pad($txt, $len, $pad = ' ', $enc = 'UTF-8') {
    69     $remain = $len - mb_strlen($txt, $enc);
    70     return $remain > 0 ? $txt . str_repeat($pad, $remain) : $txt;
    71 }

Було створено функцію selectGoods, яка відповідає за вибір товарів та додавання їх до кошика. Вона виводить таблицю з доступними товарами, дає можливість користувачу обрати товар за номером і вказати потрібну кількість. Якщо кількість дорівнює нулю, цей товар видаляється з кошика. У разі введення некоректних даних, таких як нечислові значення, від’ємні числа або занадто великі значення, програма виводить повідомлення про помилку. Після кожної операції вибору відображається оновлений вміст кошика, що дозволяє користувачу бачити поточний список покупок у зручному форматі.
    72 function selectGoods($items, &$basket) {
    73     while (true) {
    74         $labels = ['№', 'НАЗВА', 'ЦІНА'];
    75         $data = [];
    76         foreach ($items as $key => $val) {
    77             $data[] = [$key, $val['title'], $val['cost']];
    78         }
    79         renderTable($labels, $data);
    80         echo "   -----------\n0  ПОВЕРНУТИСЯ\n";
    81         echo "Виберіть товар: ";
    82         $sel = trim(fgets(STDIN));
    83 
    84         if ($sel === '0') break;
    85 
    86         if (!array_key_exists($sel, $items)) {
    87             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
    88             continue;
    89         }
    90 
    91         $itemName = $items[$sel]['title'];
    92         echo "Вибрано: $itemName\n";
    93         echo "Введіть кількість, штук: ";
    94         $count = trim(fgets(STDIN));
    95 
    96         if (!is_numeric($count) || $count < 0 || $count > 99) {
    97             echo "ПОМИЛКА! Введена некоректна кількість\n";
    98             continue;
    99         }
    100 
    101         if ($count == 0) {
    102             unset($basket[$sel]);
    103             echo "ВИДАЛЯЮ ТОВАР З КОШИКА\n";
    104         } else {
    105             $basket[$sel] = ($basket[$sel] ?? 0) + $count;
    106         }
    107 
    108         if (empty($basket)) {
    109             echo "КОШИК ПОРОЖНІЙ\n";
    110         } else {
    111             echo "У КОШИКУ:\n";
    112             $labels = ['НАЗВА', 'КІЛЬКІСТЬ'];
    113             $data = [];
    114 
    115             foreach ($basket as $key => $qty) {
    116                 $data[] = [$items[$key]['title'], $qty];
    117             }
    118             renderTable($labels, $data);
    119         }
    120 
    121         echo "\n";
    122     }
    123 }

Було створено функцію displayInvoice, яка відповідає за підсумковий розрахунок вартості товарів у кошику користувача. Спочатку вона перевіряє, чи порожній кошик — у такому випадку виводить відповідне повідомлення та суму до сплати 0. Якщо ж товари є, функція формує таблицю, де для кожного товару показує порядковий номер, назву, ціну за одиницю, кількість і загальну вартість (ціна помножена на кількість). Наприкінці підраховується загальна сума за всі товари, яка виводиться окремо. Це дозволяє користувачу отримати детальний чек і ознайомитися з підсумком перед завершенням покупки або оплатою, що є логічним завершенням основної торгової взаємодії. 
    124 function displayInvoice($items, $basket) {
    125     if (empty($basket)) {
    126         echo "КОШИК ПОРОЖНІЙ\n";
    127         echo "РАЗОМ ДО СПЛАТИ: 0\n";
    128         return;
    129     }
    130 
    131     $labels = ['№', 'НАЗВА', 'ЦІНА', 'КІЛЬКІСТЬ', 'ВАРТІСТЬ'];
    132     $data = [];
    133     $n = 1;
    134     $sum = 0;
    135 
    136     foreach ($basket as $key => $qty) {
    137         $title = $items[$key]['title'];
    138         $price = $items[$key]['cost'];
    139         $value = $price * $qty;
    140         $data[] = [$n++, $title, $price, $qty, $value];
    141         $sum += $value;
    142     }
    143 
    144     renderTable($labels, $data);
    145 
    146     echo "РАЗОМ ДО СПЛАТИ: $sum\n";
    147     echo "\n";
    148 }
       

Було створено функцію configureUser, яка дозволяє користувачу ввести свої особисті дані — ім’я та вік. Спершу програма запитує ім’я і перевіряє його за допомогою регулярного виразу, щоб переконатися, що воно складається лише з літер, апострофів, дефісів і пробілів. Якщо ім’я не відповідає вимогам, користувач отримує повідомлення про помилку і має змогу ввести його знову. Потім перевіряється вік, який повинен бути числом у діапазоні від 7 до 150 років. Якщо введене значення некоректне, користувача просять повторити введення. Після успішної валідації обох полів дані зберігаються в профілі, і користувачу виводиться підтвердження.

    149 function configureUser(&$user) {
    150     while (true) {
    151         echo "Ваше імʼя: ";
    152         $username = trim(fgets(STDIN));
    153 
    154         if (!preg_match('/^[а-яА-ЯёЁіІїЇєЄa-zA-Z\'\- ]+$/u', $username)) {
    155             echo "ПОМИЛКА! Імʼя може містити лише літери, апостроф «'», дефіс «-», пробіл\n\n";
    156             continue;
    157         }
    158 
    159         break;
    160     }
    161 
    162     while (true) {
    163         echo "Ваш вік: ";
    164         $years = trim(fgets(STDIN));
    165         if (!is_numeric($years) || $years < 7 || $years > 150) {
    166             echo "ПОМИЛКА! Користувач повинен мати вік від 7 та до 150 років.\n\n";
    167             continue;
    168         }
    169         break;
    170     }
    171 
    172     echo "\n";
    173     $user['username'] = $username;
    174     $user['years'] = (int)$years;
    175     echo "Ваше ім'я: {$user['username']}\nВаш вік: {$user['years']}\n";
    176     echo "\n";
    177 }
4 ВИСНОВКИ
У ході лабораторної роботи було створено консольний PHP-застосунок, який успішно моделює процес купівлі в продуктовому магазині. Програма включає всі необхідні функції: перегляд товарів, додавання їх до кошика з контролем кількості, формування підсумкового рахунку, а також налаштування профілю користувача з валідацією введених даних. Інтерфейс побудований у вигляді зручного меню з текстовими підказками. Особливу увагу було приділено перевірці коректності введених даних та обробці складних умов. Отримане рішення повністю відповідає вимогам лабораторної роботи і може слугувати прикладом простого інтерактивного термінального застосунку.

ДОДАТОК А
Відеозапис
Відеозапис презентації результатів лабораторної роботи: https://youtu.be/WMiQavCW0d4
Хронологічний опис відеозапису:
00:00 - Вступ
00:10 - Завдання
00:21 - Розгляд програми
04:20 - Розгляд коду
















ДОДАТОК В
Програмний код
GitHub репозиторій: https://github.com/NureIuzkovOleksandr/smp-pzpi-23-4-iuzkov-oleksandr/blob/main/Lab2/smp-pzpi-23-4-iuzkov-oleksandr-lab2/smp-pzpi-23-4-iuzkov-oleksandr-lab2-code.php
    1. <?php
    2. 
    3. $items = [
    4.     1 => ['title' => 'Молоко пастеризоване', 'cost' => 12],
    5.     2 => ['title' => 'Хліб чорний', 'cost' => 9],
    6.     3 => ['title' => 'Сир білий', 'cost' => 21],
    7.     4 => ['title' => 'Сметана 20%', 'cost' => 25],
    8.     5 => ['title' => 'Кефір 1%', 'cost' => 19],
    9.     6 => ['title' => 'Вода газована', 'cost' => 18],
    10.     7 => ['title' => 'Печиво "Весна"', 'cost' => 14],
    11. ];
    12. 
    13. $basket = [];
    14. 
    15. $user = [
    16.     'username' => '',
    17.     'years' => 0
    18. ];
    19. 
    20. echo "\n################################\n";
    21. echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
    22. echo "################################\n";
    23. 
    24. while (true) {
    25.     echo "1 Вибрати товари\n";
    26.     echo "2 Отримати підсумковий рахунок\n";
    27.     echo "3 Налаштувати свій профіль\n";
    28.     echo "0 Вийти з програми\n";
    29.     echo "Введіть команду: ";
    30.     $cmd = trim(fgets(STDIN));
    31. 
    32.     switch ($cmd) {
    33.         case '1':
    34.             selectGoods($items, $basket);
    35.             break;
    36.         case '2':
    37.             displayInvoice($items, $basket);
    38.             break;
    39.         case '3':
    40.             configureUser($user);
    41.             break;
    42.         case '0':
    43.             exit("Дякуємо за покупки! До побачення.\n");
    44.         default:
    45.             echo "ПОМИЛКА! Введіть правильну команду\n";
    46.     }
    47. }
    48. 
    49. function renderTable($labels, $data) {
    50.     $columns = array_map(fn($label) => mb_strlen($label, 'UTF-8'), $labels);
    51. 
    52.     foreach ($data as $line) {
    53.         foreach ($line as $j => $value) {
    54.             $columns[$j] = max($columns[$j], mb_strlen((string)$value, 'UTF-8'));
    55.         }
    56.     }
    57. 
    58.     foreach ($labels as $j => $label) {
    59.         echo utf8_pad($label, $columns[$j]) . '  ';
    60.     }
    61.     echo "\n";
    62. 
    63.     foreach ($data as $line) {
    64.         foreach ($line as $j => $value) {
    65.             echo utf8_pad((string)$value, $columns[$j]) . '  ';
    66.         }
    67.         echo "\n";
    68.     }
    69. }
    70. 
    71. function utf8_pad($txt, $len, $pad = ' ', $enc = 'UTF-8') {
    72.     $remain = $len - mb_strlen($txt, $enc);
    73.     return $remain > 0 ? $txt . str_repeat($pad, $remain) : $txt;
    74. }
    75. 
    76. function selectGoods($items, &$basket) {
    77.     while (true) {
    78.         $labels = ['№', 'НАЗВА', 'ЦІНА'];
    79.         $data = [];
    80.         foreach ($items as $key => $val) {
    81.             $data[] = [$key, $val['title'], $val['cost']];
    82.         }
    83.         renderTable($labels, $data);
    84.         echo "   -----------\n0  ПОВЕРНУТИСЯ\n";
    85.         echo "Виберіть товар: ";
    86.         $sel = trim(fgets(STDIN));
    87. 
    88.         if ($sel === '0') break;
    89. 
    90.         if (!array_key_exists($sel, $items)) {
    91.             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
    92.             continue;
    93.         }
    94. 
    95.         $itemName = $items[$sel]['title'];
    96.         echo "Вибрано: $itemName\n";
    97.         echo "Введіть кількість, штук: ";
    98.         $count = trim(fgets(STDIN));
    99. 
    100.         if (!is_numeric($count) || $count < 0 || $count > 99) {
    101.             echo "ПОМИЛКА! Введена некоректна кількість\n";
    102.             continue;
    103.         }
    104. 
    105.         if ($count == 0) {
    106.             unset($basket[$sel]);
    107.             echo "ВИДАЛЯЮ ТОВАР З КОШИКА\n";
    108.         } else {
    109.             $basket[$sel] = ($basket[$sel] ?? 0) + $count;
    110.         }
    111. 
    112.         if (empty($basket)) {
    113.             echo "КОШИК ПОРОЖНІЙ\n";
    114.         } else {
    115.             echo "У КОШИКУ:\n";
    116.             $labels = ['НАЗВА', 'КІЛЬКІСТЬ'];
    117.             $data = [];
    118. 
    119.             foreach ($basket as $key => $qty) {
    120.                 $data[] = [$items[$key]['title'], $qty];
    121.             }
    122.             renderTable($labels, $data);
    123.         }
    124. 
    125.         echo "\n";
    126.     }
    127. }
    128. 
    129. function displayInvoice($items, $basket) {
    130.     if (empty($basket)) {
    131.         echo "КОШИК ПОРОЖНІЙ\n";
    132.         echo "РАЗОМ ДО СПЛАТИ: 0\n";
    133.         return;
    134.     }
    135. 
    136.     $labels = ['№', 'НАЗВА', 'ЦІНА', 'КІЛЬКІСТЬ', 'ВАРТІСТЬ'];
    137.     $data = [];
    138.     $n = 1;
    139.     $sum = 0;
    140. 
    141.     foreach ($basket as $key => $qty) {
    142.         $title = $items[$key]['title'];
    143.         $price = $items[$key]['cost'];
    144.         $value = $price * $qty;
    145.         $data[] = [$n++, $title, $price, $qty, $value];
    146.         $sum += $value;
    147.     }
    148. 
    149.     renderTable($labels, $data);
    150. 
    151.     echo "РАЗОМ ДО СПЛАТИ: $sum\n";
    152.     echo "\n";
    153. }
    154. 
    155. function configureUser(&$user) {
    156.     while (true) {
    157.         echo "Ваше імʼя: ";
    158.         $username = trim(fgets(STDIN));
    159. 
    160.         if (!preg_match('/^[а-яА-ЯёЁіІїЇєЄa-zA-Z\'\- ]+$/u', $username)) {
    161.             echo "ПОМИЛКА! Імʼя може містити лише літери, апостроф «'», дефіс «-», пробіл\n\n";
    162.             continue;
    163.         }
    164. 
    165.         break;
    166.     }
    167. 
    168.     while (true) {
    169.         echo "Ваш вік: ";
    170.         $years = trim(fgets(STDIN));
    171.         if (!is_numeric($years) || $years < 7 || $years > 150) {
    172.             echo "ПОМИЛКА! Користувач повинен мати вік від 7 та до 150 років.\n\n";
    173.             continue;
    174.         }
    175.         break;
    176.     }
    177. 
    178.     echo "\n";
    179.     $user['username'] = $username;
    180.     $user['years'] = (int)$years;
    181.     echo "Ваше ім'я: {$user['username']}\nВаш вік: {$user['years']}\n";
    182.     echo "\n";
    183. }
